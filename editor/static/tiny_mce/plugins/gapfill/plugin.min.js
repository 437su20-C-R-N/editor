tinymce.PluginManager.add('gapfill', function(editor) {

	function gapfillHTML(n) {
		return '<gapfill class="mceNonEditable">Gap '+n+'</gapfill>'
	}
	function gapfillText(n) {
		return '[['+n+']]';
	}

	function replaceGapfills(content) {
		return content.replace(/\[\[(\d+)\]\]/g,function(m,n) {
			return gapfillHTML(n);
		});
	}
	function restoreGapfills(content) {
		return content.replace(/<gapfill class="mceNonEditable">Gap (\d+)<\/gapfill>/g,function(t,n) {
			return gapfillText(n);
		});
	}

	editor.on('BeforeSetcontent', function(event){ 
		event.content = replaceGapfills( event.content );
	});

	editor.on('GetContent', function(event){
        console.log('get');
		event.content = restoreGapfills(event.content);
	});

	function promptGapNumber(callback,value) {
		editor.windowManager.open({
			title: 'Gapfill',
			body: [
				{type: 'textbox', subtype: 'number', name: 'n', label: 'Number of gap', value: value}
			],
			onsubmit: function(e) {
				var n = e.data.n;
				if(!isNaN(n)) {
					n = parseInt(n);
					callback(n);
				}
			}
		});
	}

	function insertGapfill(ui,val) {
		var gaps = editor.dom.select('gapfill');
		var max = null;
		gaps.map(function(g) {
			var n = parseInt(g.textContent);
			max = Math.max(n,max);
		});
		if(max===null) {
			max = 0;
		} else {
			max += 1;
		}
		promptGapNumber(function(n) {
			editor.execCommand('mceInsertContent',true,gapfillHTML(n));
		},max+'');
	}

	function changeGapfill(node) {
		promptGapNumber(function(n) {
			node.innerText = n;
		},node.innerText);
	}

	editor.addMenuItem('gapfill', {
		shortcut: 'Alt+G',
		text: 'Insert gap',
		onclick: insertGapfill,
		context: 'insert',
		prependToContext: true
	});

	editor.addButton('gapfill', {
		shortcut: 'Alt+G',
		classes: 'widget btn gapfill',
		text: 'G',
		tooltip: 'Insert gap',
		onclick: insertGapfill
	});

	editor.addShortcut('Alt+G','Insert gap',insertGapfill);

	editor.addCommand('insertGapfill', insertGapfill);

	editor.on('DblClick',function(e) {
		if(e.target.nodeName.toLowerCase()=='gapfill') {
			changeGapfill(e.target);
		}
	});
});
