tinymce.PluginManager.add('jmevisible',function(editor) {

	editor.on('init',function() {
		editor.formatter.register('jmevisible-block',{
			block: 'div',
			wrapper: true,
			attributes: {'data-jme-visible': '%condition'},
		});
		editor.formatter.register('jmevisible',{
			inline: 'span',
			attributes: {'data-jme-visible': '%condition'},
		});

		var removeformat = editor.formatter.get('removeformat');
		removeformat.push({
			selector: 'span[data-jme-visible]', 
			attributes: ['data-jme-visible'], 
			deep: true, 
			split: true,
			expand: false,
			remove: 'empty'
		});
		removeformat.push({
			selector: 'div[data-jme-visible]', 
			attributes: ['data-jme-visible'], 
			deep: true, 
			split: true,
			expand: true,
			remove: 'all'
		});
	});

	function setVisibleIf() {
		var node = editor.selection.getNode();
		var condition = '';
		var is_collapsed = editor.selection.isCollapsed();
		if(node && is_collapsed) {
			if(!node.hasAttribute('data-jme-visible')) {
				node = editor.dom.getParent(node,'[data-jme-visible]') || node;
			}
			condition = node.getAttribute('data-jme-visible');
		}
		var is_block = editor.dom.isBlock(node);
		editor.windowManager.open({
			title: 'Visible if condition is true',
			body: [
				{type: 'textbox', subtype: 'text', name: 'condition', label: 'Condition', value: condition}
			],
			onsubmit: function(e) {
				var condition = e.data.condition;
				editor.undoManager.transact(function() {
					editor.focus();
					if(condition) {
						if(is_collapsed) {
							editor.formatter.apply('jmevisible-block',{condition: condition},node);
						} else {
							editor.formatter.apply('jmevisible',{condition: condition});
						}
					} else {
						editor.formatter.remove('jmevisible',{},node);
						editor.formatter.remove('jmevisible-block',{},node);
					}
					editor.nodeChanged();
				});
			}
		});
	}

	editor.addButton('jmevisible', {
		text: 'V',
		icon: false,
		tooltip: 'Conditional visibility',
		onclick: setVisibleIf,
		stateSelector: '[data-jme-visible]'
	});

});
