.parts > .part + .part.root {
    margin-top: 1em;
}

.part .part-controls {
    margin: 1em 0;
}
.part .part-controls > button {
    margin: 0.2em 0;
}
.part.active > .children-description {
    color: #ddd;
}

.part > .panel-heading,
.unit-test > .panel-heading {
    cursor: s-resize;
}
.part.open > .panel-heading,
.unit-test.open > .panel-heading {
    cursor: n-resize;
}

.parts-tree > .list-group {
    max-height: 60vh;
    overflow-y: auto;
}

.parts-tree .gaps, .parts-tree .steps {
    margin-top: 1px;
}

.parts-tree .part.gap, .parts-tree .part.step {
    margin-left: 2em;
}


.part-tabs {
    margin-bottom: 1em;
}

.part-tabs li.more-important + li:not(.more-important) {
    border-top: 1px solid #eee;
    margin-top: 1em;
}

.part-tabs > li:not(.more-important):not(.active) > a {
    color: hsl(204, 40%, 55%);
}

.part-header-controls .btn {
    color: inherit;
}

.part .custom-name {
    border: none;
    border-bottom: 2px solid transparent;
    padding: 0;
    font-weight: bold;
    width: auto;
    display: inline-block;
    font-size: 1em;
    color: inherit;
    border-radius: 0;
    transition: border-bottom-color 0.2s;
}
.part .custom-name:hover {
    border-bottom-color: black;
}
.part .custom-name:focus {
    border-bottom-color: black;
}
.part .custom-name:not(:focus)::placeholder {
    color: inherit;
}

.part select.type {
    margin-left: 1em;
}

.part .form-horizontal .form-control {
    display: inline;
}

table.variable-list > tbody > tr > td {
    padding: 8px 0;
}
.variable-list .name, .variable-list .value-cell {
    padding-left: 8px;
    padding-right: 8px;
}
table.variable-list .value-cell {
    width: 100%;
}
table.variable-list .value-cell .value {
  max-width: 100%;
  height: 1.5em;
}

.lock-cell button.lock.locked {
    color: black;
}

.panel.variable-groups {
    max-height: 40em;
    overflow-y: auto;
}

.function .parameters li {
    margin-bottom: 0.5em;
}

.function .parameter + .parameter::before {
    content: ',';
    margin-right: 0.5em;
}

.function .output::before {
    content: '⇒';
    margin-right: 0.5em;
}

.resource img.thumbnail {
    max-width: 200px;
    max-height: 200px;
}

.variable-group-name {
    font-weight: bold;
}

.variable-list tbody.ko_container.empty {
    display: block;
    min-height: 3em;
    background: #fefbfb;
    width: 100%;
    position: absolute;
    box-sizing: border-box;
    padding: 1em;
}
.variable-selector {
    cursor: pointer;
}
.variable-selector .name {
    width: 40%;
    word-break: break-all;
}
.variable-selector .type {
    padding-right: 2em;
    color: #555;
    font-family: monospace;
    font-size: 0.8em;
    line-height: 1.25em;
    vertical-align: middle;
}
.variable-selector .value {
    text-align: left;
    display: inline-block;
    max-height: 5em;
    overflow-y: hidden;
    overflow-x: hidden;
    word-break: break-word;
}

.variable-selector.error .value {
    color: red;
    font-weight: bold;
    max-height: none;
}
.variable-selector .value img {
    height: 100%;
}

.variable-selector .is-random {
    line-height: 1em;
    font-size: 13px;
}

.variable-reference {
    margin: 0.2em;
}

.empty-receiver * {
    opacity: 0;
}

.main-settings {
    margin-bottom: 8rem;
}

.jme-value {
    font-family: monospace;
}
.jme-value[data-jme-value-type="error"],
.jme-value[data-jme-value-type="string"],
.jme-value[data-jme-value-type="nothing"],
.jme-value[data-jme-value-type="list"],
.jme-value[data-jme-value-type="dict"],
.jme-value[data-jme-value-type="html"] {
    font-family: inherit;
}

.base-marking-algorithm pre {
  max-height: 20em;
  overflow-y: auto;
  margin-bottom: 1em;
}

.marking-test .nav-tabs,
.unit-test .nav-tabs {
    margin-bottom: 1em;
}
.unit-test .passing-status {
    margin-right: 0.5em;
}

.marking-test .variables .variable .name {
    cursor: pointer;
}

.marking-test .note:not(.show-note) .only-when-shown > * {
    display: none;
}
.marking-test .note:not(.show-note) {
    color: #555;
}
.marking-test .note.invalid {
    color: red;
}
.marking-test .note.invalid .name {
    text-decoration: wavy underline;
}
.marking-test .note:not(.show-note) > td {
    padding-top: 0;
    padding-bottom: 0;
}

.marking-test .note.show-note .name {
    font-weight: bold;
}

.table.notes col.name {
    width: 13em;
}
.table.notes col.feedback {
    min-width: 13em;
}
.table.notes .note .value {
    max-height: 5em;
    overflow-y: auto;
    overflow-x: hidden;
}

.part-type-modal .part-types {
    max-height: 66vh;
    overflow-y: auto;
}
.part-type-modal .part-types > .part-type {
    display: flex;
    align-items: baseline;
}
.part-type-modal .part-types > .part-type > button.use {
    margin-right: 0.5em;
}
.part-type-modal .part-types > .part-type ~ .part-type {
    margin-top: 1em;
}

.add-part {
    line-height: 3em;
}

#previewModal .modal-content {
    display: flex;
    max-height: 90vh;
    flex-direction: column;
}
#previewModal .modal-body {
    flex-grow: 1;
    overflow-y: auto;
}
